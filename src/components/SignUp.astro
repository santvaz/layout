---
import Icon from "./Icon.astro";
---

<section
  class="box input flex justify-center items-center h-fit rounded-none w-full max-w-lg"
>
  <div
    class="signup-logo flex items-center justify-center p-2 bg-neutral-50 mb-4 border border-purple-500 border-opacity-50 rounded-full"
  >
    <Icon icon="swifly" color="var(--accent-regular)" size="2.5em" gradient />
  </div>
  <form
    method="POST"
    action="/api/signup"
    id="signupForm"
    class="flex flex-col justify-center gap-8 py-12 items-center w-full"
  >
    <label for="email" class="text-xl">E-mail</label>
    <input
      type="text"
      name="email"
      id="email"
      class="bg-opacity-50 px-8 py-4 rounded-xl border border-x-[var(--gray-800)] border-y-[var(--gray-600)] focus:outline-none focus:border-purple-600 bg-[var(--gray-900)]"
    />
    <span id="emailError" class="error"></span>
    <label for="username" class="text-xl">Usuario</label>
    <input
      type="text"
      name="username"
      id="username"
      class="bg-opacity-50 px-8 py-4 rounded-xl border border-x-[var(--gray-800)] border-y-[var(--gray-600)] focus:outline-none focus:border-purple-600 bg-[var(--gray-900)]"
    />
    <span id="usernameError" class="error"></span>
    <label for="password" class="text-xl">Clave</label>
    <input
      type="password"
      name="password"
      id="password"
      class="bg-opacity-50 px-8 py-4 rounded-xl border border-x-[var(--gray-800)] border-y-[var(--gray-600)] focus:outline-none focus:border-purple-600 bg-[var(--gray-900)]"
    />
    <span id="passwordError" class="error"></span>
    <div class="utils text-sm flex flex-col items-center justify-center">
      <a href="/login" class="hover:opacity-80 m-2">Quiero iniciar sesión</a>
      <a href="/forgot" class="hover:opacity-80 m-2"
        >He olvidado mi contraseña</a
      >
    </div>
    <input type="submit" class="shadow-xl" value="Registrarse" id="signup" />
  </form>

  <script>
    const validations = {
      email: (value) => {
        if (!value) return "Email is required";
        if (value.length < 6 || !/^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$/.test(value))
          return "Email must be a valid data entry";
        return "";
      },
      username: (value) => {
        if (!value) return "Username is required";
        if (
          value.length < 3 ||
          value.length > 31 ||
          !/^[a-z0-9_-]+$/.test(value)
        )
          return "Username must be a valid data entry";
        return "";
      },
      password: (value) => {
        if (!value) return "Password is required";
        if (
          value.length < 8 ||
          value.length > 255 ||
          !/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(value)
        )
          return "Password must be at least 8 characters long, with at least one digit, one uppercase letter, and one lowercase letter";
        return "";
      },
    };

    const showError = (input, message) => {
      const errorSpan = document.getElementById(input.id + "Error");
      errorSpan.textContent = message;
      input.classList.add("bg-red-400");
    };

    const clearError = (input) => {
      const errorSpan = document.getElementById(input.id + "Error");
      errorSpan.textContent = "";
      input.classList.remove("bg-red-400");
    };

    const addBlurEvent = (input, validation) => {
      input.addEventListener("blur", (event) => {
        const message = validation(event.target.value);
        if (message) {
          showError(event.target, message);
        } else {
          clearError(event.target);
        }
      });
    };

    const emailInput = document.getElementById("email");
    const usernameInput = document.getElementById("username");
    const passwordInput = document.getElementById("password");

    addBlurEvent(emailInput, validations.email);
    addBlurEvent(usernameInput, validations.username);
    addBlurEvent(passwordInput, validations.password);
  </script>

  <style>
    form span {
      @apply text-center text-red-500 my-2 text-balance w-full max-w-72;
    }

    .signup-logo {
      box-shadow: var(--shadow-md);
      background: radial-gradient(var(--gray-900), var(--gray-900) 150%);
    }

    .box {
      border: 1px solid var(--gray-800);
      border-radius: 0.75rem;
      padding: 1.5rem;
      background-color: var(--gray-999_40);
      box-shadow: var(--shadow-sm);
    }

    .input {
      display: flex;
      flex-direction: column;
    }

    #signup {
      color: white;
      cursor: pointer;
      padding-left: 2rem;
      padding-right: 2rem;
      padding-top: 1rem;
      padding-bottom: 1rem;
      margin-top: 2rem;
      border-radius: 9999px;
      border-width: 1px;
      --tw-border-opacity: 1;
      background-color: rgb(89 28 135 / var(--tw-border-opacity));
      border-left-color: rgb(192 132 252 / var(--tw-border-opacity));
      border-right-color: rgb(192 132 252 / var(--tw-border-opacity));
      border-top-color: rgb(168 85 247 / var(--tw-border-opacity));
      border-bottom-color: rgb(168 85 247 / var(--tw-border-opacity));
    }

    #signup:hover {
      --tw-bg-opacity: 1;
      background-color: rgb(107 33 168 / var(--tw-bg-opacity));
    }

    .skills h2 {
      font-size: var(--text-lg);
    }

    .skills p {
      color: var(--gray-400);
    }

    @media (min-width: 50em) {
      .box {
        border-radius: 1.5rem;
        padding: 2.5rem;
      }

      .skills {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 5rem;
      }

      .skills h2 {
        font-size: var(--text-2xl);
      }
    }
  </style>
</section>
